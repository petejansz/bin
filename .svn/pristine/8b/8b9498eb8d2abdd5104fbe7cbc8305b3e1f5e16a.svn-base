/*
  NodeJS command-line interface to pd-crm-processess close-account REST function.
  Author: Pete Jansz
*/

var http = require( "http" );
var lib1 = require( "/users/pjansz/Documents/bin/lib1.js" );

var myArgs = process.argv.slice( 2 )
var playerId = myArgs[0];
var hostname = myArgs[1];
var port = myArgs[2];
var exitValue = 0;

if ( playerId == null || hostname == null || port == null )
{
    console.log( "USAGE: node processes-close-account.js playerId hostname port" );
    process.exit( 1 );
}

var siteID = 35;
var systemId = 8;
var channelId = 2;

var jsonBody =
    {
        "callerChannelId": channelId,
        "callingClientId": "127.0.0.1",
        "callerSystemId": systemId,
        "transactionIdBase": lib1.generateUUID(),
        "transactionTime": new Date().valueOf(),
        "siteID": siteID,
        "playerId": playerId
    };

var options = {
    "method": "POST",
    "hostname": hostname,
    "port": port,
    "path": "/california/api/v1/processes/close-account",
    "headers": {
        "x-player-id": playerId,
        "x-site-id": siteID,
        "x-channel-id": channelId,
        "x-ex-system-id": systemId,
        "x-client-id": "127.0.0.1",
        "x-unique-id": "V6Cypgr-Um0AAAdzZasdcvbdsd",
        "content-type": "application/json;charset=UTF-8",
        "accept-language": "en-US,en;q=0.8,mt;q=0.6",
        "accept-encoding": "gzip, deflate, br",
        "accept": "application/json, text/javascript, */*; q=0.01",
        "cache-control": "no-cache",
    }
};

options.hostname = hostname;
options.port = port;
options.playerId = playerId;

var req = http.request( options, function ( res )
{
    var chunks = [];

    res.on( "data", function ( chunk )
    {
        chunks.push( chunk );
    } );

    res.on( "end", function ()
    {
        var responseBodyBuffer = Buffer.concat( chunks );
        var responseBodyStr = responseBodyBuffer.toString();
        var responseBodyJSON = JSON.parse( responseBodyStr );
        var errorEncountered = responseBodyJSON.errorEncountered == true;
        if ( errorEncountered )
        {
            exitValue = 1;
            console.log( 'errorEncountered: ' + errorEncountered
                + ", errorCode: " + responseBodyJSON.errorCode
                + ", transactionIdBase: " + jsonBody.transactionIdBase
            );
        }

        process.exit( exitValue );
    } );
} );

req.write( JSON.stringify( jsonBody ) );
req.end();

